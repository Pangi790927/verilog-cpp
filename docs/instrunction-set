registers:
	0) eax, ebx, ecx, edx, esi, edi, esp, ebp
	1) ax,  bx,  cx,  dx  
	2) ah,  bh,  ch,  dh
	3) al,  bl,  cl,  dl

instructions: (total cnt > 66)
	# from 8086 file
	0) * arithmetic: (cnt - 8)
	ADC
	ADD
	CMP
	DEC
	INC
	NEG
	SBB
	SUB

	1) * bitwise: (cnt - 10)
	AND
	NOT
	OR
	XOR
	SHL
	SHR
	SAL
	SAR
	ROL
	ROR

	2) * stack: (cnt - 6)
	POP
	PUSH
	POPA
	PUSHA
	POPF
	PUSHF

	3, 4, 5) * calls: (cnt > 27)
	CALL
	INT
	IRET
	J*  - there are 11 of those
	JN* - there are 11 of those
	JMP
	LOOP* ?
	REP* ?

	6) * compare: (cnt - 2)
	CMP
	TEST

	7) * misc: (cnt - 2)
	HLT
	NOP

	8) * io: (cnt - 2)
	IN
	OUT

	9) * mov: (cnt > 2)
	MOV
	XCHG
	LDS ?
	LEA ?
	
	10) * flags: (cnt - 7)
	CLC
	CLD
	CLI
	CMC
	STC
	STD
	STI


adress-mode:
	# https://www.geeksforgeeks.org/addressing-modes-8086-microprocessor/

	0) MOV AX, BX				Register mode
	1) MOV CL, 0A				Immediate mode
	2) MOV AX, [0500]			Displacement or direct mode
	3) MOV AX, [DI]				Register indirect mode
	4) MOV AL, [BP+SI]			Based indexed mode
	5) MOV AX, [SI+2000]		Indexed mode
	6) MOV AL, [SI+BP+2000]		Based indexed displacement mode

	or:
	MOV [SI+BP+2000], AL

instr-code:
0	#  INSTR CODE
	|  ^
	|  ^
	|  ^
	|  ^
	|  ^
	|  ^
	|  ^
8	#  DIRECTION
	|  ADDRESS MODE
	|  ^
	|  ^
	|  REG
	|  ^
	|  ^
	|  ^
16	#  ^
	|  OP REG 1
	|  ^
	|  ^
	|  ^
	|  ^
	|  OP REG 2
	|  ^
24	#  ^
	|  ^
	|  ^
	|  X
	|  X
	|  X
	|  X
	|  X
32